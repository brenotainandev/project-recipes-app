{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/project-recipes-app/src/Components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport context from '../Context/Context';\nimport SearchCard from './SearchCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar(_ref) {\n  _s();\n\n  let {\n    title,\n    searchInput,\n    history\n  } = _ref;\n  const FOOD_INGREDIENTS = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${searchInput}`;\n  const FOOD_NAMES = `https://www.themealdb.com/api/json/v1/1/search.php?s=${searchInput}`;\n  const FIRST_LETTER_FOOD = `https://www.themealdb.com/api/json/v1/1/search.php?f=${searchInput}`;\n  const DRINK_INGREDIENTS = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${searchInput}`;\n  const DRINK_NAMES = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchInput}`;\n  const FIRST_LETTER_DRINKS = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${searchInput}`;\n  const [checked, setChecked] = useState('');\n  const {\n    api,\n    setProcurado,\n    setSearchInput //   drinkIngredientsAPI,\n    //   drinkNamesAPI,\n    //   firstLetterDrinkAPI,\n\n  } = useContext(context);\n\n  const handleClick = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    setChecked(value);\n  };\n\n  const handleSearch = () => {\n    setSearchInput('');\n    setProcurado(true);\n\n    if (title === 'Foods') {\n      switch (checked) {\n        case 'ingredient':\n          api(FOOD_INGREDIENTS, searchInput);\n          break;\n\n        case 'name':\n          api(FOOD_NAMES, searchInput);\n          break;\n\n        case 'letter':\n          if (searchInput.length > 1) {\n            global.alert('Your search must have only 1 (one) character');\n          }\n\n          api(FIRST_LETTER_FOOD, searchInput);\n          break;\n\n        default:\n          console.log('Default');\n      }\n    }\n\n    if (title === 'Drinks') {\n      switch (checked) {\n        case 'ingredient':\n          api(DRINK_INGREDIENTS, searchInput);\n          break;\n\n        case 'name':\n          api(DRINK_NAMES, searchInput);\n          break;\n\n        case 'letter':\n          if (searchInput.length > 1) {\n            global.alert('Your search must have only 1 (one) character');\n          }\n\n          api(FIRST_LETTER_DRINKS, searchInput);\n          break;\n\n        default:\n          console.log('Default');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"c1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"c1\",\n          name: \"search-bar\",\n          \"data-testid\": \"ingredient-search-radio\",\n          value: \"ingredient\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \"Ingredient\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"c2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"c2\",\n          name: \"search-bar\",\n          value: \"name\",\n          \"data-testid\": \"name-search-radio\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), \"Name\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"c3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"c3\",\n          name: \"search-bar\",\n          value: \"letter\",\n          \"data-testid\": \"first-letter-search-radio\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \"First Letter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"exec-search-btn\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchCard, {\n        history: history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"RAinc+NOk3+WIcDjmEbvKo6Cpj4=\");\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  searchInput: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/brenotainan/projetos/project-recipes-app/src/Components/SearchBar.js"],"names":["PropTypes","React","useContext","useState","context","SearchCard","SearchBar","title","searchInput","history","FOOD_INGREDIENTS","FOOD_NAMES","FIRST_LETTER_FOOD","DRINK_INGREDIENTS","DRINK_NAMES","FIRST_LETTER_DRINKS","checked","setChecked","api","setProcurado","setSearchInput","handleClick","target","value","handleSearch","length","global","alert","console","log","propTypes","string","isRequired","shape","push","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useState } from 'react';\nimport context from '../Context/Context';\nimport SearchCard from './SearchCard';\n\nfunction SearchBar({ title, searchInput, history }) {\n  const FOOD_INGREDIENTS = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${searchInput}`;\n  const FOOD_NAMES = `https://www.themealdb.com/api/json/v1/1/search.php?s=${searchInput}`;\n  const FIRST_LETTER_FOOD = `https://www.themealdb.com/api/json/v1/1/search.php?f=${searchInput}`;\n  const DRINK_INGREDIENTS = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${searchInput}`;\n  const DRINK_NAMES = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchInput}`;\n  const FIRST_LETTER_DRINKS = `https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${searchInput}`;\n\n  const [checked, setChecked] = useState('');\n  const {\n    api,\n    setProcurado,\n    setSearchInput,\n  //   drinkIngredientsAPI,\n  //   drinkNamesAPI,\n  //   firstLetterDrinkAPI,\n  } = useContext(context);\n  const handleClick = ({ target: { value } }) => {\n    setChecked(value);\n  };\n  const handleSearch = () => {\n    setSearchInput('');\n    setProcurado(true);\n    if (title === 'Foods') {\n      switch (checked) {\n      case 'ingredient':\n        api(FOOD_INGREDIENTS, searchInput);\n        break;\n      case 'name':\n        api(FOOD_NAMES, searchInput);\n        break;\n      case 'letter':\n        if (searchInput.length > 1) {\n          global.alert('Your search must have only 1 (one) character');\n        }\n        api(FIRST_LETTER_FOOD, searchInput);\n        break;\n      default:\n        console.log('Default');\n      }\n    }\n    if (title === 'Drinks') {\n      switch (checked) {\n      case 'ingredient':\n        api(DRINK_INGREDIENTS, searchInput);\n        break;\n      case 'name':\n        api(DRINK_NAMES, searchInput);\n        break;\n      case 'letter':\n        if (searchInput.length > 1) {\n          global.alert('Your search must have only 1 (one) character');\n        }\n        api(FIRST_LETTER_DRINKS, searchInput);\n        break;\n      default:\n        console.log('Default');\n      }\n    }\n  };\n  return (\n    <form>\n      <div>\n        <label htmlFor=\"c1\">\n          <input\n            type=\"radio\"\n            id=\"c1\"\n            name=\"search-bar\"\n            data-testid=\"ingredient-search-radio\"\n            value=\"ingredient\"\n            onClick={ handleClick }\n          />\n          Ingredient\n        </label>\n        <label htmlFor=\"c2\">\n          <input\n            type=\"radio\"\n            id=\"c2\"\n            name=\"search-bar\"\n            value=\"name\"\n            data-testid=\"name-search-radio\"\n            onClick={ handleClick }\n\n          />\n          Name\n        </label>\n        <label htmlFor=\"c3\">\n          <input\n            type=\"radio\"\n            id=\"c3\"\n            name=\"search-bar\"\n            value=\"letter\"\n            data-testid=\"first-letter-search-radio\"\n            onClick={ handleClick }\n\n          />\n          First Letter\n        </label>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          onClick={ handleSearch }\n        >\n          Search\n        </button>\n        <SearchCard history={ history } />\n      </div>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  searchInput: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}