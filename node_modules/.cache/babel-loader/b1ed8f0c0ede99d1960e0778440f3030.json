{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/project-recipes-app/src/Components/FoodCard.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport context from '../Context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FOOD_CATEGORIES = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst FOOD_MAX_RESULT = 12;\nconst CATEGORIES_MAX_RESULT = 5;\nexport default function FoodCard(_ref) {\n  _s();\n\n  let {\n    foods\n  } = _ref;\n  const {\n    foodCategories,\n    setFoodCategories,\n    api,\n    searchFoodCategories,\n    setSearchFoodCategories,\n    toggleSearchFoodCat,\n    setToggleSearchFoodCat,\n    changeFoodCategory,\n    setChangeFoodCategory,\n    procurado,\n    setProcurado,\n    setFoodDetails\n  } = useContext(context);\n\n  const searchCategories = async category => {\n    setProcurado(false);\n    setChangeFoodCategory(category);\n\n    if (toggleSearchFoodCat && changeFoodCategory === category) {\n      setToggleSearchFoodCat(false);\n    } else {\n      setToggleSearchFoodCat(true);\n      const CATEGORY_API = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n      const {\n        meals\n      } = await api(CATEGORY_API);\n      setSearchFoodCategories(meals);\n    }\n  };\n\n  const allCategories = () => {\n    setToggleSearchFoodCat(false);\n  }; // const saveDetails = () => {\n  // };\n\n\n  useEffect(() => {\n    (async () => {\n      const {\n        meals\n      } = await api(FOOD_CATEGORIES);\n      setFoodCategories(meals);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: () => allCategories(),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), foodCategories.slice(0, CATEGORIES_MAX_RESULT).map((food, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"data-testid\": `${food.strCategory}-category-filter`,\n      onClick: () => searchCategories(food.strCategory),\n      children: food.strCategory\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), searchFoodCategories.length >= 1 && toggleSearchFoodCat && !procurado ? searchFoodCategories.slice(0, FOOD_MAX_RESULT).map((food, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/foods/${food.idMeal}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recipe-card`,\n        role: \"button\",\n        onClick: () => setFoodDetails(food),\n        tabIndex: index,\n        onKeyPress: () => setFoodDetails(food),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-card-name`,\n          children: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-card-img`,\n          src: food.strMealThumb,\n          alt: food.strMeal\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)) : foods.slice(0, FOOD_MAX_RESULT).map((food, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/foods/${food.idMeal}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recipe-card`,\n        role: \"button\",\n        onClick: () => setFoodDetails(food),\n        onKeyPress: () => setFoodDetails(food),\n        tabIndex: index,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-card-name`,\n          children: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-card-img`,\n          src: food.strMealThumb,\n          alt: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodCard, \"GkbOl+/v05s63y7CgdVfT79Yii0=\");\n\n_c = FoodCard;\nFoodCard.propTypes = {\n  foods: PropTypes.shape({\n    slice: PropTypes.func\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodCard\");","map":{"version":3,"sources":["/home/brenotainan/projetos/project-recipes-app/src/Components/FoodCard.jsx"],"names":["PropTypes","React","useContext","useEffect","Link","context","FOOD_CATEGORIES","FOOD_MAX_RESULT","CATEGORIES_MAX_RESULT","FoodCard","foods","foodCategories","setFoodCategories","api","searchFoodCategories","setSearchFoodCategories","toggleSearchFoodCat","setToggleSearchFoodCat","changeFoodCategory","setChangeFoodCategory","procurado","setProcurado","setFoodDetails","searchCategories","category","CATEGORY_API","meals","allCategories","slice","map","food","index","strCategory","length","idMeal","strMeal","strMealThumb","propTypes","shape","func","isRequired","history","push"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport context from '../Context/Context';\n\nconst FOOD_CATEGORIES = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\nconst FOOD_MAX_RESULT = 12;\nconst CATEGORIES_MAX_RESULT = 5;\n\nexport default function FoodCard({ foods }) {\n  const {\n    foodCategories,\n    setFoodCategories,\n    api,\n    searchFoodCategories,\n    setSearchFoodCategories,\n    toggleSearchFoodCat,\n    setToggleSearchFoodCat,\n    changeFoodCategory,\n    setChangeFoodCategory,\n    procurado,\n    setProcurado,\n    setFoodDetails,\n  } = useContext(context);\n\n  const searchCategories = async (category) => {\n    setProcurado(false);\n    setChangeFoodCategory(category);\n    if (toggleSearchFoodCat && changeFoodCategory === category) {\n      setToggleSearchFoodCat(false);\n    } else {\n      setToggleSearchFoodCat(true);\n      const CATEGORY_API = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n      const { meals } = await api(CATEGORY_API);\n      setSearchFoodCategories(meals);\n    }\n  };\n\n  const allCategories = () => {\n    setToggleSearchFoodCat(false);\n  };\n\n  // const saveDetails = () => {\n\n  // };\n\n  useEffect(() => {\n    (async () => {\n      const { meals } = await api(FOOD_CATEGORIES);\n      setFoodCategories(meals);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => allCategories() }\n      >\n        All\n      </button>\n      { foodCategories.slice(0, CATEGORIES_MAX_RESULT).map((food, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `${food.strCategory}-category-filter` }\n          onClick={ () => searchCategories(food.strCategory) }\n        >\n          { food.strCategory }\n        </button>\n      )) }\n\n      {/* tela dos itens */}\n\n      { searchFoodCategories.length >= 1 && toggleSearchFoodCat && !procurado\n        ? (\n          searchFoodCategories.slice(0, FOOD_MAX_RESULT).map((food, index) => (\n            <Link key={ index } to={ `/foods/${food.idMeal}` }>\n              <div\n                data-testid={ `${index}-recipe-card` }\n                key={ index }\n                role=\"button\"\n                onClick={ () => setFoodDetails(food) }\n                tabIndex={ index }\n                onKeyPress={ () => setFoodDetails(food) }\n              >\n                <p data-testid={ `${index}-card-name` }>{ food.strMeal }</p>\n                <img\n                  key={ index }\n                  data-testid={ `${index}-card-img` }\n                  src={ food.strMealThumb }\n                  alt={ food.strMeal }\n                />\n              </div>\n            </Link>\n          ))\n        )\n        : (\n          foods.slice(0, FOOD_MAX_RESULT).map((food, index) => (\n            <Link key={ index } to={ `/foods/${food.idMeal}` }>\n              <div\n                data-testid={ `${index}-recipe-card` }\n                key={ index }\n                role=\"button\"\n                onClick={ () => setFoodDetails(food) }\n                onKeyPress={ () => setFoodDetails(food) }\n                tabIndex={ index }\n              >\n                <p data-testid={ `${index}-card-name` }>{ food.strMeal }</p>\n                <img\n                  data-testid={ `${index}-card-img` }\n                  src={ food.strMealThumb }\n                  alt={ food.strMeal }\n                />\n              </div>\n            </Link>\n          )))}\n    </div>\n  );\n}\n\nFoodCard.propTypes = {\n  foods: PropTypes.shape({\n    slice: PropTypes.func,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}