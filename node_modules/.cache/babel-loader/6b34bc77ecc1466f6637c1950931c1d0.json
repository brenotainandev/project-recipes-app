{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/project-recipes-app/src/Pages/Drinks/InProgress/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport context from '../../../Context/Context';\nimport favoritesDetails from '../../../Functions/remove';\nimport blackHeartIcon from '../../../images/blackHeartIcon.svg';\nimport shareIcon from '../../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../../images/whiteHeartIcon.svg';\nimport IngredientsListDrink from './IngredientsListDrink';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction InProgressDrinks(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [response, setResponse] = useState([]);\n  const [copiedkLink, setCopiedkLink] = useState(false);\n  const {\n    api,\n    favoritedDrink,\n    setFavoritedDrink,\n    ingredients,\n    validacao,\n    listIngredients,\n    verificaCheck,\n    botao\n  } = useContext(context); // pegar id do URL\n\n  const {\n    pathname\n  } = history.location;\n  const FIXO = 7;\n  const id = pathname.substring(pathname.lastIndexOf('drinks/') + FIXO).split('/')[0];\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(`http://localhost:3000/drinks/${id}`);\n    setCopiedkLink(true);\n  };\n\n  const favorite = () => {\n    if (favoritedDrink) {\n      setFavoritedDrink(false);\n      favoritesDetails('removeDrinks', response);\n    } else {\n      setFavoritedDrink(true);\n      favoritesDetails('drinks', response);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // pegar dados da API\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const {\n        drinks\n      } = await api(URL);\n      setResponse(drinks[0]);\n      verificaCheck(id, 'cocktails');\n    })();\n  }, []);\n  useEffect(() => {\n    // verificar se ta favorito\n    validacao('drinks', response); // atualiza a lista de igredientes\n\n    listIngredients(response);\n  }, [response]);\n\n  const concluido = () => {\n    const {\n      strCategory,\n      strAlcoholic,\n      strTags,\n      strDrinkThumb,\n      strDrink\n    } = response; // busca a data atual: https://www.horadecodar.com.br/2021/04/03/como-pegar-a-data-atual-com-javascript/\n\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`; // Pega informações do localStorege\n\n    const local = JSON.parse(localStorage.getItem('doneRecipes'));\n    const atual = {\n      id,\n      type: 'drink',\n      nationality: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: dataAtual,\n      tags: [strTags]\n    };\n\n    if (local) {\n      const novo = [...local, atual];\n      localStorage.setItem('doneRecipes', JSON.stringify(novo));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([atual]));\n    }\n\n    history.push('/done-recipes');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [response ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"recipe-title\",\n        children: response.strDrink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        \"data-testid\": \"recipe-category\",\n        children: response.strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: response.strDrinkThumb,\n        alt: \"foto\",\n        \"data-testid\": \"recipe-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"share-btn\",\n        src: shareIcon,\n        onClick: () => copyToClipboard(),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spanCopy\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \"Compartilhar\",\n            className: \"imgCopy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), copiedkLink ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pCopy\",\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), favoritedDrink ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"favorite-btn\",\n        src: blackHeartIcon,\n        onClick: () => favorite(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: blackHeartIcon,\n          alt: \"Favoritar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"favorite-btn\",\n        src: whiteHeartIcon,\n        onClick: () => favorite(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: whiteHeartIcon,\n          alt: \"Favoritar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), ingredients ? /*#__PURE__*/_jsxDEV(IngredientsListDrink, {\n        ingredients: ingredients,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: response.strInstructionsIT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"finish-recipe\",\n      \"data-testid\": \"finish-recipe-btn\",\n      disabled: !botao,\n      onClick: () => concluido(),\n      children: \"Finish Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InProgressDrinks, \"Ioqb6DNmqiX2OsSgNph5U2fjG78=\");\n\n_c = InProgressDrinks;\nInProgressDrinks.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.func,\n    push: PropTypes.func\n  }).isRequired\n};\nexport default InProgressDrinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"InProgressDrinks\");","map":{"version":3,"sources":["/home/brenotainan/projetos/project-recipes-app/src/Pages/Drinks/InProgress/index.js"],"names":["PropTypes","React","useContext","useEffect","useState","context","favoritesDetails","blackHeartIcon","shareIcon","whiteHeartIcon","IngredientsListDrink","InProgressDrinks","history","response","setResponse","copiedkLink","setCopiedkLink","api","favoritedDrink","setFavoritedDrink","ingredients","validacao","listIngredients","verificaCheck","botao","pathname","location","FIXO","id","substring","lastIndexOf","split","copyToClipboard","navigator","clipboard","writeText","favorite","URL","drinks","concluido","strCategory","strAlcoholic","strTags","strDrinkThumb","strDrink","data","Date","dia","String","getDate","padStart","mes","getMonth","ano","getFullYear","dataAtual","local","JSON","parse","localStorage","getItem","atual","type","nationality","category","alcoholicOrNot","name","image","doneDate","tags","novo","setItem","stringify","push","strInstructionsIT","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport context from '../../../Context/Context';\nimport favoritesDetails from '../../../Functions/remove';\nimport blackHeartIcon from '../../../images/blackHeartIcon.svg';\nimport shareIcon from '../../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../../images/whiteHeartIcon.svg';\nimport IngredientsListDrink from './IngredientsListDrink';\n\nfunction InProgressDrinks({ history }) {\n  const [response, setResponse] = useState([]);\n  const [copiedkLink, setCopiedkLink] = useState(false);\n  const {\n    api,\n    favoritedDrink,\n    setFavoritedDrink,\n    ingredients,\n    validacao,\n    listIngredients,\n    verificaCheck,\n    botao,\n  } = useContext(context);\n\n  // pegar id do URL\n  const { pathname } = history.location;\n  const FIXO = 7;\n  const id = pathname.substring(pathname.lastIndexOf('drinks/') + FIXO).split('/')[0];\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(`http://localhost:3000/drinks/${id}`);\n    setCopiedkLink(true);\n  };\n\n  const favorite = () => {\n    if (favoritedDrink) {\n      setFavoritedDrink(false);\n      favoritesDetails('removeDrinks', response);\n    } else {\n      setFavoritedDrink(true);\n      favoritesDetails('drinks', response);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      // pegar dados da API\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n      const { drinks } = await api(URL);\n      setResponse(drinks[0]);\n      verificaCheck(id, 'cocktails');\n    })();\n  }, []);\n\n  useEffect(() => {\n    // verificar se ta favorito\n    validacao('drinks', response);\n    // atualiza a lista de igredientes\n    listIngredients(response);\n  }, [response]);\n\n  const concluido = () => {\n    const { strCategory, strAlcoholic, strTags, strDrinkThumb, strDrink } = response;\n\n    // busca a data atual: https://www.horadecodar.com.br/2021/04/03/como-pegar-a-data-atual-com-javascript/\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`;\n\n    // Pega informações do localStorege\n    const local = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    const atual = {\n      id,\n      type: 'drink',\n      nationality: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate: dataAtual,\n      tags: [strTags],\n    };\n\n    if (local) {\n      const novo = [...local, atual];\n      localStorage.setItem('doneRecipes', JSON.stringify(novo));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([atual]));\n    }\n\n    history.push('/done-recipes');\n  };\n\n  return (\n    <div>\n      {response\n        ? (\n          <>\n            {/* Titulo e Categoria */}\n            <h3 data-testid=\"recipe-title\">{response.strDrink}</h3>\n            <h5 data-testid=\"recipe-category\">{response.strCategory}</h5>\n            <img src={ response.strDrinkThumb } alt=\"foto\" data-testid=\"recipe-photo\" />\n            {/* Botão de compartilhar */}\n            <button\n              type=\"button\"\n              data-testid=\"share-btn\"\n              src={ shareIcon }\n              onClick={ () => copyToClipboard() }\n            >\n              <span className=\"spanCopy\">\n                <img src={ shareIcon } alt=\"Compartilhar\" className=\"imgCopy\" />\n                { copiedkLink ? <p className=\"pCopy\">Link copied!</p> : null }\n              </span>\n            </button>\n            {/* Botão de Favoritar */}\n            { favoritedDrink\n              ? (\n                <button\n                  type=\"button\"\n                  data-testid=\"favorite-btn\"\n                  src={ blackHeartIcon }\n                  onClick={ () => favorite() }\n                >\n                  <img src={ blackHeartIcon } alt=\"Favoritar\" />\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  data-testid=\"favorite-btn\"\n                  src={ whiteHeartIcon }\n                  onClick={ () => favorite() }\n                >\n                  <img src={ whiteHeartIcon } alt=\"Favoritar\" />\n                </button>\n              )}\n\n            {/* Lista de igredientes */}\n\n            {ingredients\n              ? <IngredientsListDrink ingredients={ ingredients } id={ id } />\n              : null}\n\n            {/* Instruções */}\n            <p data-testid=\"instructions\">{response.strInstructionsIT}</p>\n          </>\n        ) : null}\n\n      {/* Botão de finalizar receita */}\n      <button\n        type=\"button\"\n        className=\"finish-recipe\"\n        data-testid=\"finish-recipe-btn\"\n        disabled={ !botao }\n        onClick={ () => concluido() }\n      >\n        Finish Recipe\n      </button>\n    </div>\n  );\n}\n\nInProgressDrinks.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.func,\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default InProgressDrinks;\n"]},"metadata":{},"sourceType":"module"}