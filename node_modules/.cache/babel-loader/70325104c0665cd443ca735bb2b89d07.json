{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/project-recipes-app/src/Components/NationalityCard.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport context from '../Context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FOOD_MAX_RESULT = 12;\nexport default function NationalityCard(_ref) {\n  _s();\n\n  let {\n    foods\n  } = _ref;\n  const {\n    api\n  } = useContext(context);\n  const [nationalities, setNationalities] = useState([]);\n  const [searchNat, setSearchNat] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const MEALS_NATIONALITIES = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const {\n        meals\n      } = await api(MEALS_NATIONALITIES);\n      setNationalities(meals);\n    })();\n  }, []);\n\n  const searchFoodNationality = async nationality => {\n    if (nationality !== 'All') {\n      const SEARCH_MEALS_NATION = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${nationality}`;\n      const {\n        meals\n      } = await api(SEARCH_MEALS_NATION);\n      setSearchNat(meals);\n    } else {\n      setSearchNat([]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      \"data-testid\": \"explore-by-nationality-dropdown\",\n      onChange: _ref2 => {\n        let {\n          target\n        } = _ref2;\n        return searchFoodNationality(target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        \"data-testid\": \"All-option\",\n        value: \"All\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), nationalities ? nationalities.map((nation, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        \"data-testid\": `${nation.strArea}-option`,\n        value: nation.strArea,\n        children: nation.strArea\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), searchNat.length >= 1 ? searchNat.slice(0, FOOD_MAX_RESULT).map((food, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/foods/${food.idMeal}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recipe-card`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-card-name`,\n          children: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-card-img`,\n          src: food.strMealThumb,\n          alt: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)) : foods.slice(0, FOOD_MAX_RESULT).map((food, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/foods/${food.idMeal}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": `${index}-recipe-card`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-card-name`,\n          children: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          \"data-testid\": `${index}-card-img`,\n          src: food.strMealThumb,\n          alt: food.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NationalityCard, \"y9dbjUIejmYLTVz7eWlUup9LDAk=\");\n\n_c = NationalityCard;\nNationalityCard.propTypes = {\n  foods: PropTypes.shape({\n    slice: PropTypes.func\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NationalityCard\");","map":{"version":3,"sources":["/home/brenotainan/projetos/project-recipes-app/src/Components/NationalityCard.jsx"],"names":["PropTypes","React","useContext","useEffect","useState","Link","context","FOOD_MAX_RESULT","NationalityCard","foods","api","nationalities","setNationalities","searchNat","setSearchNat","MEALS_NATIONALITIES","meals","searchFoodNationality","nationality","SEARCH_MEALS_NATION","target","value","map","nation","index","strArea","length","slice","food","idMeal","strMeal","strMealThumb","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport context from '../Context/Context';\n\nconst FOOD_MAX_RESULT = 12;\n\nexport default function NationalityCard({ foods }) {\n  const { api } = useContext(context);\n  const [nationalities, setNationalities] = useState([]);\n  const [searchNat, setSearchNat] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const MEALS_NATIONALITIES = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\n      const { meals } = await api(MEALS_NATIONALITIES);\n      setNationalities(meals);\n    })();\n  }, []);\n\n  const searchFoodNationality = async (nationality) => {\n    if (nationality !== 'All') {\n      const SEARCH_MEALS_NATION = `https://www.themealdb.com/api/json/v1/1/filter.php?a=${nationality}`;\n      const { meals } = await api(SEARCH_MEALS_NATION);\n      setSearchNat(meals);\n    } else {\n      setSearchNat([]);\n    }\n  };\n\n  return (\n    <div>\n      <select\n        data-testid=\"explore-by-nationality-dropdown\"\n        onChange={ ({ target }) => searchFoodNationality(target.value) }\n      >\n        <option\n          data-testid=\"All-option\"\n          value=\"All\"\n        >\n          All\n        </option>\n        { nationalities\n          ? (\n            nationalities.map((nation, index) => (\n              <option\n                key={ index }\n                data-testid={ `${nation.strArea}-option` }\n                value={ nation.strArea }\n              >\n                { nation.strArea }\n              </option>\n            ))\n          )\n          : (\n            null\n          ) }\n      </select>\n      { searchNat.length >= 1\n        ? (\n          searchNat.slice(0, FOOD_MAX_RESULT).map((food, index) => (\n            <Link key={ index } to={ `/foods/${food.idMeal}` }>\n              <div\n                data-testid={ `${index}-recipe-card` }\n                key={ index }\n              >\n                <p data-testid={ `${index}-card-name` }>{ food.strMeal }</p>\n                <img\n                  data-testid={ `${index}-card-img` }\n                  src={ food.strMealThumb }\n                  alt={ food.strMeal }\n                />\n              </div>\n            </Link>))\n        )\n        : (foods.slice(0, FOOD_MAX_RESULT).map((food, index) => (\n          <Link key={ index } to={ `/foods/${food.idMeal}` }>\n            <div\n              data-testid={ `${index}-recipe-card` }\n              key={ index }\n            >\n              <p data-testid={ `${index}-card-name` }>{ food.strMeal }</p>\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ food.strMealThumb }\n                alt={ food.strMeal }\n              />\n            </div>\n          </Link>))\n        )}\n    </div>\n  );\n}\n\nNationalityCard.propTypes = {\n  foods: PropTypes.shape({\n    slice: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}