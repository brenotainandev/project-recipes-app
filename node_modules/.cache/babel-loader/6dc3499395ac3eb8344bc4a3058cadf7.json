{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/project-recipes-app/src/Pages/Details/FoodDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react'; // import { Link } from 'react-router-dom';\n\nimport context from '../../Context/Context';\nimport favoritesDetails from '../../Functions/remove';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport Button from './buttons/Button';\nimport './FoodDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FoodDetails(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const {\n    foodDetails,\n    api,\n    setFoodDetails,\n    ingredients,\n    listIngredients,\n    validacao,\n    favoritedFood,\n    setFavoritedFood,\n    copyToClipboard,\n    copiedFoodLink\n  } = useContext(context);\n  const [drinkRecommended, setDrinkRecommended] = useState([]); // API para retornar as bebidas recomendadas\n\n  useEffect(() => {\n    (async () => {\n      const NU = 6;\n      const URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const retorno = await api(URL);\n      setDrinkRecommended(retorno.drinks.slice(0, NU));\n    })();\n  }, []);\n\n  const details = () => {\n    const {\n      strMeal,\n      strMealThumb,\n      strInstructions,\n      strCategory,\n      strVideo,\n      idMeal\n    } = foodDetails;\n\n    const favorite = () => {\n      if (favoritedFood) {\n        setFavoritedFood(false);\n        favoritesDetails('removeFoods', foodDetails);\n      } else {\n        setFavoritedFood(true);\n        favoritesDetails('foods', foodDetails);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        \"data-testid\": \"recipe-title\",\n        children: strMeal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: strMealThumb,\n        alt: strMeal,\n        \"data-testid\": \"recipe-photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"share-btn\",\n        src: shareIcon,\n        onClick: () => copyToClipboard(idMeal),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spanCopy\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \"Compartilhar\",\n            className: \"imgCopy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), copiedFoodLink ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pCopy\",\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 32\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), favoritedFood ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"favorite-btn\",\n        src: blackHeartIcon,\n        onClick: () => favorite(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: blackHeartIcon,\n          alt: \"Favoritar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"favorite-btn\",\n        src: whiteHeartIcon,\n        onClick: () => favorite(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: whiteHeartIcon,\n          alt: \"Favoritar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"recipe-category\",\n        children: strCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients ? ingredients.map((atual, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": `${index}-ingredient-name-and-measure`,\n          children: atual\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"instructions\",\n        children: strInstructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        \"data-testid\": \"video\",\n        width: \"560\",\n        height: \"315\",\n        src: strVideo,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: drinkRecommended && drinkRecommended.map((atual, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${index}-recomendation-card`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": `${index}-recomendation-title`,\n            children: atual.strDrink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: atual.strDrinkThumb,\n            alt: \"Favoritar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: idMeal,\n        pagina: \"foods\",\n        ingredients: ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const {\n        pathname\n      } = history.location;\n      const lastItem = pathname.substring(pathname.lastIndexOf('/') + 1);\n      const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${lastItem}`;\n      listIngredients(foodDetails);\n\n      if (!foodDetails) {\n        const {\n          meals\n        } = await api(URL);\n        setFoodDetails(meals[0]);\n        listIngredients(meals[0]);\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    validacao('foods', foodDetails);\n  }, [foodDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: foodDetails ? details() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodDetails, \"Kumb21hTA8A3t25/9ctE0AxUVvQ=\");\n\n_c = FoodDetails;\nFoodDetails.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.func\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodDetails\");","map":{"version":3,"sources":["/home/brenotainan/projetos/project-recipes-app/src/Pages/Details/FoodDetails.jsx"],"names":["PropTypes","React","useContext","useEffect","useState","context","favoritesDetails","blackHeartIcon","shareIcon","whiteHeartIcon","Button","FoodDetails","history","foodDetails","api","setFoodDetails","ingredients","listIngredients","validacao","favoritedFood","setFavoritedFood","copyToClipboard","copiedFoodLink","drinkRecommended","setDrinkRecommended","NU","URL","retorno","drinks","slice","details","strMeal","strMealThumb","strInstructions","strCategory","strVideo","idMeal","favorite","map","atual","index","strDrink","strDrinkThumb","pathname","location","lastItem","substring","lastIndexOf","meals","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport context from '../../Context/Context';\nimport favoritesDetails from '../../Functions/remove';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport shareIcon from '../../images/shareIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport Button from './buttons/Button';\nimport './FoodDetails.css';\n\nexport default function FoodDetails({ history }) {\n  const {\n    foodDetails,\n    api,\n    setFoodDetails,\n    ingredients,\n    listIngredients,\n    validacao,\n    favoritedFood,\n    setFavoritedFood,\n    copyToClipboard,\n    copiedFoodLink,\n  } = useContext(context);\n\n  const [drinkRecommended, setDrinkRecommended] = useState([]);\n\n  // API para retornar as bebidas recomendadas\n  useEffect(() => {\n    (async () => {\n      const NU = 6;\n      const URL = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      const retorno = await api(URL);\n      setDrinkRecommended(retorno.drinks.slice(0, NU));\n    })();\n  }, []);\n\n  const details = () => {\n    const {\n      strMeal,\n      strMealThumb,\n      strInstructions,\n      strCategory,\n      strVideo,\n      idMeal,\n    } = foodDetails;\n\n    const favorite = () => {\n      if (favoritedFood) {\n        setFavoritedFood(false);\n        favoritesDetails('removeFoods', foodDetails);\n      } else {\n        setFavoritedFood(true);\n        favoritesDetails('foods', foodDetails);\n      }\n    };\n\n    return (\n      <div>\n        <h2 data-testid=\"recipe-title\">{strMeal}</h2>\n        <img src={ strMealThumb } alt={ strMeal } data-testid=\"recipe-photo\" />\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          onClick={ () => copyToClipboard(idMeal) }\n        >\n          <span className=\"spanCopy\">\n            <img src={ shareIcon } alt=\"Compartilhar\" className=\"imgCopy\" />\n            { copiedFoodLink ? <p className=\"pCopy\">Link copied!</p> : null }\n          </span>\n        </button>\n\n        { favoritedFood\n          ? (\n            <button\n              type=\"button\"\n              data-testid=\"favorite-btn\"\n              src={ blackHeartIcon }\n              onClick={ () => favorite() }\n            >\n              <img src={ blackHeartIcon } alt=\"Favoritar\" />\n            </button>\n          )\n          : (\n            <button\n              type=\"button\"\n              data-testid=\"favorite-btn\"\n              src={ whiteHeartIcon }\n              onClick={ () => favorite() }\n            >\n              <img src={ whiteHeartIcon } alt=\"Favoritar\" />\n            </button>\n          )}\n        <p data-testid=\"recipe-category\">{strCategory}</p>\n\n        <ul>\n          {ingredients ? ingredients.map((atual, index) => (\n            <li\n              key={ index }\n              data-testid={ `${index}-ingredient-name-and-measure` }\n            >\n              {atual}\n            </li>\n          )) : null}\n        </ul>\n\n        <p data-testid=\"instructions\">{strInstructions}</p>\n\n        <iframe\n          data-testid=\"video\"\n          width=\"560\"\n          height=\"315\"\n          src={ strVideo }\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer;\n          autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        />\n\n        <section>\n          {drinkRecommended && drinkRecommended.map((atual, index) => (\n            <div key={ index } data-testid={ `${index}-recomendation-card` }>\n              <p data-testid={ `${index}-recomendation-title` }>{atual.strDrink}</p>\n              <img src={ atual.strDrinkThumb } alt=\"Favoritar\" />\n            </div>\n          ))}\n        </section>\n        <Button id={ idMeal } pagina=\"foods\" ingredients={ ingredients } />\n      </div>);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const { pathname } = history.location;\n      const lastItem = pathname.substring(pathname.lastIndexOf('/') + 1);\n      const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${lastItem}`;\n      listIngredients(foodDetails);\n      if (!foodDetails) {\n        const { meals } = await api(URL);\n        setFoodDetails(meals[0]);\n        listIngredients(meals[0]);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    validacao('foods', foodDetails);\n  }, [foodDetails]);\n\n  return (\n    <div>\n      {\n        foodDetails ? details() : (<p>Carregando</p>)\n      }\n    </div>\n  );\n}\n\nFoodDetails.propTypes = {\n  history: PropTypes.shape({\n    location: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}